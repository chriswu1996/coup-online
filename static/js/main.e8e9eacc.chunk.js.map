{"version":3,"sources":["components/game/ActionDecision.js","components/game/ChallengeDecision.js","components/game/BlockChallengeDecision.js","components/game/PlayerBoard.js","components/game/RevealDecision.js","components/game/BlockDecision.js","components/game/ChooseInfluence.js","components/game/ExchangeInfluences.js","components/game/EventLog.js","components/CheatSheetModal.js","components/RulesModal.js","components/game/Coup.js","components/CreateGame.js","components/JoinGame.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/CheatSheet.svg","assets/Chicken.svg","logo.svg"],"names":["ActionDecision","props","chooseAction","action","target","res","source","name","console","log","socket","emit","doneAction","deductCoins","money","pickingTarget","setState","actionError","isPickingTarget","targetAction","pickTarget","state","isDecisionMade","decision","controls","this","players","filter","x","isDead","map","index","style","backgroundColor","color","key","onClick","id","className","Component","ChallengeDecision","vote","isChallenging","closeOtherVotes","challengee","challenger","doneChallengeVote","challengeText","BlockChallengeDecision","counterAction","prevAction","doneBlockChallengeVote","claim","PlayerBoard","boardItems","length","player","influences","textAlign","RevealDecision","selectInfluence","influence","revealedCard","isBlock","doneReveal","act","actionMap","tax","assassinate","exchange","steal","block_foreign_aid","block_steal","block_assassinate","join","BlockDecision","block","resClaim","error","blockee","blocker","isBlocking","doneBlockVote","pass","pickClaim","isPickingClaim","control","ChooseInfluence","playerName","doneChooseInfluence","ExchangeInfluences","keep","push","splice","putBack","totalInf","kept","doneExchangeInfluence","EventLog","scrollToBottom","messagesEnd","scrollIntoView","behavior","logs","float","clear","ref","el","CheatSheetModal","handleOpenCheatSheetModal","showCheatSheetModal","handleCloseCheatSheetModal","xmlns","width","height","viewBox","data-name","transform","cx","cy","r","y","isOpen","contentLabel","onRequestClose","shouldCloseOnOverlayClick","class","src","CheatSheet","alt","RulesModal","handleOpenRulesModal","showRulesModal","handleCloseRulesModal","modal","home","Coup","amount","isChooseAction","doneChallengeBlockingVote","blockChallengeRes","blockingAction","voteType","revealingRes","isChoosingInfluence","exchangeInfluence","influenceColorMap","duke","captain","assassin","contessa","ambassador","playerIndex","currentPlayer","winner","playAgain","waiting","disconnected","bind","playAgainButton","on","reason","i","coloredLog","split","item","found","forEach","drawTwo","actionDecision","revealDecision","challengeDecision","blockChallengeDecision","chooseInfluenceDecision","blockDecision","coins","exchangeInfluences","isWaiting","axios","require","baseUrl","CreateGame","onNameChange","joinParty","io","roomCode","isLoading","isInRoom","err","isReady","canStart","createParty","errorMsg","isError","get","then","data","namespace","catch","startGame","isGameStarted","copyCode","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","copied","createButton","youCanSort","disabled","data-icon","data-inline","type","onChange","e","list","setList","newState","ready","readyUnitColor","JoinGame","onCodeChange","disconnect","attemptJoinParty","exists","reportReady","joinReady","Home","chicken","to","href","rel","trackingId","process","REACT_APP_GOOGLE_TRACKING_ID","ReactGA","initialize","pageview","App","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e8e9eacc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class ActionDecision extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isDecisionMade: false,\r\n            decision: '',\r\n            isPickingTarget: false,\r\n            targetAction: '',\r\n            actionError: ''\r\n        }\r\n    }\r\n\r\n    chooseAction = (action, target = null) => {\r\n        const res = {\r\n            action: {\r\n                action: action,\r\n                target: target,\r\n                source: this.props.name\r\n            }\r\n        }\r\n        console.log(res)\r\n        \r\n        this.props.socket.emit('g-actionDecision', res)\r\n        this.props.doneAction();\r\n    }\r\n\r\n    deductCoins = (action) => {\r\n        console.log(this.props.money, action)\r\n        if(action === 'assassinate') {\r\n            if(this.props.money >= 3) {\r\n                this.props.deductCoins(3);\r\n                this.pickingTarget('assassinate');\r\n            } else {\r\n                this.setState({ actionError: 'Not enough coins to assassinate!'})\r\n            }\r\n        } else if(action === 'coup') {\r\n            if(this.props.money >= 7) {\r\n                this.props.deductCoins(7);\r\n                this.pickingTarget('coup');\r\n            } else {\r\n                this.setState({ actionError: 'Not enough coins to coup!'})\r\n            }\r\n        }\r\n    }\r\n\r\n    pickingTarget = (action) => {\r\n        this.setState({\r\n            isPickingTarget: true,\r\n            targetAction: action,\r\n            actionError: ''\r\n        });\r\n        this.setState({targetAction: action});\r\n    }\r\n\r\n    pickTarget = (target) => {\r\n        this.chooseAction(this.state.targetAction, target);\r\n    }\r\n\r\n    render() {\r\n        let controls = null\r\n        if(this.state.isPickingTarget) {\r\n            controls = this.props.players.filter(x => !x.isDead).filter(x => x.name !== this.props.name).map((x, index) => {\r\n                return <button style={{ backgroundColor: x.color}} key={index} onClick={() => this.pickTarget(x.name)}>{x.name}</button>\r\n            })\r\n        } else if(this.props.money < 10) {\r\n           controls = ( \r\n           <>   \r\n                <button onClick={() => this.chooseAction('income')}>Income</button>\r\n                <button onClick={() => this.deductCoins('coup')}>Coup</button>\r\n                <button onClick={() => this.chooseAction('foreign_aid')}>Foreign Aid</button>\r\n                <button id=\"captain\" onClick={() => this.pickingTarget('steal')}>Steal</button>\r\n                <button id=\"assassin\" onClick={() => this.deductCoins('assassinate')}>Assassinate</button>\r\n                <button id=\"duke\" onClick={() => this.chooseAction('tax')}>Tax</button>\r\n                <button id=\"ambassador\" onClick={() => this.chooseAction('exchange')}>Exchange</button>\r\n           </> \r\n           )\r\n        } else { //money over 10, has to coup\r\n            controls = <button onClick={() => this.deductCoins('coup')}>Coup</button>\r\n        }\r\n        return (<>\r\n            <p className=\"DecisionTitle\">Choose an action</p>\r\n            <div className=\"DecisionButtonsContainer\">\r\n               {controls}\r\n               <p>{this.state.actionError}</p>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ChallengeDecision extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props)\r\n    // }\r\n\r\n    vote = (isChallenging) => {\r\n        this.props.closeOtherVotes('challenge')\r\n\r\n        const res = {\r\n            action: this.props.action,\r\n            isChallenging,\r\n            challengee: this.props.action.source,\r\n            challenger: this.props.name\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-challengeDecision', res);\r\n        this.props.doneChallengeVote();\r\n    }\r\n\r\n    challengeText = (action, source, target) => {\r\n        if(action === 'steal') {\r\n            return <p><b>{source}</b> is trying to Steal from <b>{target}</b></p>\r\n        }else if(action === 'tax') {\r\n            return <p><b>{source}</b> is trying to collect Tax (3 coins)</p>\r\n        }else if(action === 'assassinate') {\r\n            return <p><b>{source}</b> is trying to Assassinate <b>{target}</b></p>\r\n        }else if(action === 'exchange') {\r\n            return <p><b>{source}</b> is trying to Exchange their influences</p>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.challengeText(this.props.action.action, this.props.action.source, this.props.action.target)}\r\n                <button onClick={() => this.vote(true)}>Challenge</button>\r\n                {/* <button onClick={() => this.vote(false)}>Pass</button> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class BlockChallengeDecision extends Component {\r\n\r\n    vote = (isChallenging) => {\r\n        this.props.closeOtherVotes('challenge-block')\r\n\r\n        const res = {\r\n            counterAction: this.props.counterAction,\r\n            prevAction: this.props.prevAction,\r\n            isChallenging,\r\n            challengee: this.props.counterAction.source,\r\n            challenger: this.props.name\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-blockChallengeDecision', res);\r\n        this.props.doneBlockChallengeVote();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <p>{this.props.counterAction.source} is trying to block {this.props.prevAction.action} from {this.props.prevAction.source} as {this.props.counterAction.claim}</p>\r\n                <button onClick={() => this.vote(true)}>Challenge</button>\r\n                {/* <button onClick={() => this.vote(false)}>Pass</button> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './PlayerBoardStyles.css'\r\n\r\nexport default function PlayerBoard(props) {\r\n    let boardItems = null\r\n    if(props.players.length > 1) {\r\n        boardItems = props.players.map((player, index) =>\r\n            <span className=\"PlayerBoardItem\" style={{ backgroundColor: `${player.color}` }} key={index}>\r\n                <h2>{player.name}</h2>\r\n                <p>Coins: {player.money}</p>\r\n                <p>Influences: {player.influences.length}</p>\r\n                {/* <p>{player.influences.join(', ')}</p> */}\r\n            </span>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"PlayerBoardContainer\" style={{textAlign: \"center\"}}>\r\n            {boardItems}\r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RevealDecision extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.act = this.props.res.isBlock ? this.props.res.counterAction.counterAction : this.props.res.action.action\r\n        this.actionMap = {\r\n            tax: [\"duke\"],\r\n            assassinate: [\"assassin\"],\r\n            exchange: [\"ambassador\"],\r\n            steal: [\"captain\"],\r\n            block_foreign_aid: [\"duke\"],\r\n            block_steal: [\"ambassador\", \"captain\"],\r\n            block_assassinate: [\"contessa\"],\r\n        }\r\n    }\r\n    \r\n    selectInfluence = (influence) => {\r\n        // res.revealedCard, prevaction, counterAction, challengee, challenger, isBlock\r\n        const res = {\r\n            revealedCard: influence,\r\n            prevAction: this.props.res.action,\r\n            counterAction: this.props.res.counterAction,\r\n            challengee: this.props.res.challengee,\r\n            challenger: this.props.res.challenger,\r\n            isBlock: this.props.res.isBlock\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-revealDecision', res);\r\n        this.props.doneReveal();\r\n    }\r\n\r\n    render() {\r\n        const influences = this.props.influences.map((x, index) => {\r\n            return <button id={x} key={index} onClick={() => this.selectInfluence(x)}>{x}</button>\r\n        })\r\n        return ( \r\n            <div>\r\n                <p>Your <b>{this.act}</b> has been challenged! If you don't reveal {this.actionMap[this.act].join(' or ')} you'll lose influence! </p>\r\n                {influences}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class BlockDecision extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isDecisionMade: false,\r\n            decision: '',\r\n            isPickingClaim: false,\r\n            targetAction: ''\r\n        }\r\n    }\r\n\r\n    chooseAction = (action, target = null) => {\r\n        const res = {\r\n            action: {\r\n                action: action,\r\n                target: target,\r\n                source: this.props.name\r\n            }\r\n        }\r\n        console.log(res)\r\n        \r\n        this.props.socket.emit('g-actionDecision', res)\r\n        this.props.doneAction();\r\n    }\r\n\r\n    block = (block, claim = null) => {\r\n        this.props.closeOtherVotes('block')\r\n        // res.prevAction.action, res.prevAction.target, res.prevAction.source, res.counterAction, res.blockee, res.blocker, res.isBlocking\r\n        let resClaim\r\n        if(claim != null) {\r\n            resClaim = claim;\r\n        } else if(block === 'block_foreign_aid') {\r\n            resClaim = 'duke'\r\n        } else if(block === 'block_assassinate') {\r\n            resClaim = 'contessa'\r\n        } else {\r\n            console.error('unknown claim, line 40')\r\n        }\r\n\r\n        const res = {\r\n            prevAction: this.props.action,\r\n            counterAction: {\r\n                counterAction: block,\r\n                claim: resClaim,\r\n                source: this.props.name\r\n            },\r\n            blockee: this.props.action.source,\r\n            blocker: this.props.name,\r\n            isBlocking: true\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-blockDecision', res)\r\n        this.props.doneBlockVote();\r\n    }\r\n\r\n    pass = () => {\r\n        const res = {\r\n            action: this.props.action,\r\n            isBlocking: false\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-blockDecision', res)\r\n        this.props.doneBlockVote();\r\n    }\r\n\r\n    pickClaim = (block) => {\r\n        this.props.closeOtherVotes('block')\r\n        this.setState({ decision: block })\r\n        this.setState({ isPickingClaim: true })\r\n    }\r\n\r\n    render() {\r\n        let control = null\r\n        let pickClaim = null\r\n        if(!this.state.isPickingClaim) {\r\n            if(this.props.action.action === 'foreign_aid') {\r\n                control = <>\r\n                <p><b>{this.props.action.source}</b> is trying to use Foreign Aid</p>\r\n                <button onClick={() => this.block('block_foreign_aid')}>Block Foreign Aid</button>\r\n                </>\r\n            } else if(this.props.action.action === 'steal') {\r\n                control = <button onClick={() => this.pickClaim('block_steal')}>Block Steal</button>\r\n            } else if(this.props.action.action === 'assassinate') {\r\n                control = <button onClick={() => this.block('block_assassinate')}>Block Assassination</button>\r\n            }\r\n        } else {\r\n            pickClaim = <>\r\n                <p>To block steal, do you claim Ambassador or Captain?</p>\r\n                <button onClick={() => this.block(this.state.decision, 'ambassador')}>Ambassador</button>\r\n                <button onClick={() => this.block(this.state.decision, 'captain')}>Captain</button>\r\n            </>\r\n        }\r\n        \r\n        return (\r\n            <>\r\n               {control}\r\n               {pickClaim}\r\n               {/* <button onClick={() => this.pass()}>Pass</button> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ChooseInfluence extends Component {\r\n    \r\n    selectInfluence = (influence) => {\r\n        // res.revealedCard, prevaction, counterAction, challengee, challenger, isBlock\r\n        const res = {\r\n            influence: influence,\r\n            playerName: this.props.name\r\n        }\r\n        console.log(res)\r\n        this.props.socket.emit('g-chooseInfluenceDecision', res);\r\n        this.props.doneChooseInfluence();\r\n    }\r\n\r\n    render() {\r\n        const influences = this.props.influences.map((x, index) => {\r\n            return <button id={`${x}`} key={index} onClick={() => this.selectInfluence(x)}>{x}</button>\r\n        })\r\n        return ( \r\n            <div>\r\n                <p className=\"DecisionTitle\">Choose an influence to lose </p>\r\n                {influences}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ExchangeInfluences extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             influences: props.influences,\r\n             keep: [],\r\n             totalInf: props.influences.length\r\n        }\r\n    }\r\n    \r\n\r\n    selectInfluence = (index) => {\r\n        // res.revealedCard, prevaction, counterAction, challengee, challenger, isBlock\r\n        this.state.keep.push(this.state.influences.splice(index,1)[0])\r\n        this.setState({ influences: this.state.influences, putBack: this.state.putBack })\r\n        if(this.state.keep.length === (this.state.totalInf-2)) {\r\n            const res = {\r\n                playerName: this.props.name,\r\n                kept: this.state.keep,\r\n                putBack: this.state.influences\r\n            }\r\n            this.props.socket.emit('g-chooseExchangeDecision', res);\r\n            this.props.doneExchangeInfluence();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const influences = this.state.influences.map((x, index) => {\r\n            return <button key={index} onClick={() => this.selectInfluence(index)}>{x}</button>\r\n        })\r\n        return ( \r\n            <div>\r\n                <p className=\"DecisionTitle\">Choose which influence(s) to keep</p>\r\n                {influences}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class EventLog extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"EventLogContainer\">\r\n                <p className=\"bold EventLogTitle\">Event Log</p>\r\n                <div className=\"EventLogBody\">\r\n                   {this.props.logs.map((x, index) => {\r\n                        if(index === this.props.logs.length-1){\r\n                            return <p className=\"new\">{x}</p>\r\n                        }\r\n                    return <p>{x}</p>\r\n                    })}\r\n                    <div style={{ float:\"left\", clear: \"both\" }}\r\n                        ref={(el) => { this.messagesEnd = el; }}>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n      \r\n      componentDidMount() {\r\n        this.scrollToBottom();\r\n      }\r\n      \r\n      componentDidUpdate() {\r\n        this.scrollToBottom();\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport CheatSheet from '../assets/CheatSheet.svg'\r\n\r\nexport default class CheatSheetModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            showCheatSheetModal: false,\r\n        }\r\n    }\r\n\r\n    handleOpenCheatSheetModal = () => {\r\n        this.setState({ showCheatSheetModal: true });\r\n    }\r\n\r\n    handleCloseCheatSheetModal = () => {\r\n        this.setState({ showCheatSheetModal: false });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"CheatSheet\" onClick={this.handleOpenCheatSheetModal}>\r\n                <p>Cheat Sheet</p>  \r\n                <svg className=\"InfoIcon\"xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 21 22\">\r\n                    <g id=\"more_info\" data-name=\"more info\" transform=\"translate(-39 -377)\">\r\n                        <g id=\"Ellipse_1\" data-name=\"Ellipse 1\" className=\"cls-1\" transform=\"translate(39 377)\">\r\n                        <circle className=\"cls-3\" cx=\"10.5\" cy=\"10.5\" r=\"10.5\"/>\r\n                        <circle className=\"cls-4\" cx=\"10.5\" cy=\"10.5\" r=\"10\"/>\r\n                        </g>\r\n                        <text id=\"i\" className=\"cls-2\" transform=\"translate(48 393)\"><tspan x=\"0\" y=\"0\">i</tspan></text>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n            <ReactModal \r\n            isOpen={this.state.showCheatSheetModal}\r\n            contentLabel=\"Minimal Modal Example\"\r\n            onRequestClose={this.handleCloseCheatSheetModal}\r\n            shouldCloseOnOverlayClick={true}\r\n            className=\"CheatSheetModal\"\r\n            >\r\n            <div className=\"CloseModalButtonContainer\">\r\n                <button className=\"CloseModalButton\" onClick={this.handleCloseCheatSheetModal}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"21\" viewBox=\"0 0 21 21\">\r\n                        <g id=\"more_info\" data-name=\"more info\" transform=\"translate(-39 -377)\">\r\n                            <g id=\"Ellipse_1\" data-name=\"Ellipse 1\" class=\"cls-5\" transform=\"translate(39 377)\">\r\n                            <circle class=\"cls-7\" cx=\"10.5\" cy=\"10.5\" r=\"10.5\"/>\r\n                            <circle class=\"cls-8\" cx=\"10.5\" cy=\"10.5\" r=\"10\"/>\r\n                            </g>\r\n                            <text id=\"x\" class=\"cls-6\" transform=\"translate(46 391)\"><tspan x=\"0\" y=\"0\">x</tspan></text>\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n           \r\n            <div className=\"CheatSheetContainer\">\r\n                <img src={CheatSheet} alt=\"Cheat-Sheet\"/>\r\n            </div>\r\n            </ReactModal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nexport default class RulesModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            showRulesModal: false,\r\n        }\r\n    }\r\n\r\n    handleOpenRulesModal = () => {\r\n        this.setState({ showRulesModal: true });\r\n    }\r\n\r\n    handleCloseRulesModal = () => {\r\n        this.setState({ showRulesModal: false });\r\n    }\r\n    \r\n    render() {\r\n        let modal = <ReactModal \r\n        isOpen={this.state.showRulesModal}\r\n        contentLabel=\"Minimal Modal Example\"\r\n        onRequestClose={this.handleCloseRulesModal}\r\n        shouldCloseOnOverlayClick={true}\r\n    >\r\n    <div className=\"CloseModalButtonContainer\">\r\n        <button className=\"CloseModalButton\" onClick={this.handleCloseRulesModal}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"21\" viewBox=\"0 0 21 21\">\r\n                <g id=\"more_info\" data-name=\"more info\" transform=\"translate(-39 -377)\">\r\n                    <g id=\"Ellipse_1\" data-name=\"Ellipse 1\" class=\"cls-5\" transform=\"translate(39 377)\">\r\n                    <circle class=\"cls-7\" cx=\"10.5\" cy=\"10.5\" r=\"10.5\"/>\r\n                    <circle class=\"cls-8\" cx=\"10.5\" cy=\"10.5\" r=\"10\"/>\r\n                    </g>\r\n                    <text id=\"x\" class=\"cls-6\" transform=\"translate(46 391)\"><tspan x=\"0\" y=\"0\">x</tspan></text>\r\n                </g>\r\n            </svg>\r\n        </button>\r\n    </div>\r\n   \r\n    <div className=\"RulesContainer\">\r\n        <div className=\"RulesContent\">\r\n            <h2>Rules</h2>\r\n            <p>2-6 players</p>\r\n            <p>On your turn, you may choose an action to play. The action you choose may or may not correspond to the influences that you possess. \r\n                For the action that you choose, other players may potentially block or challenge it. </p>\r\n            <p><b>Challenge</b>: When a player declares an action they are declaring to the rest of the players that they have a certain influence, \r\n                and any other player can challenge it. When a player is challenged, the challenged player must reveal the correct influence \r\n                associated with their action. If they reveal the correct influence, the challenger player will lose an influence. However, \r\n                if they fail to reveal the correct influence the challenged player will lose their incorrectly revealed influence.</p>\r\n            <p><b>Block</b>: When the any of the actions \"Foreign Aid\", \"Steal\", and \"Assasinate\" are used, they can be blocked. Once again, \r\n                any player can claim to have the correct influence to block. However, blocks can also be challenged by any player. If a block \r\n                fails, the original action will take place.\r\n            </p>\r\n            <p>\r\n                If a player loses all their influences, they are out of the game. The last player standing wins!\r\n            </p>\r\n            <p>\r\n                At this time, if a player disconnects, the game must be recreated.\r\n            </p>\r\n            <h2>Influences</h2>\r\n            <h3>Captain</h3>\r\n            <p><b id=\"captain-color\">STEAL</b>: Steal 2 coins from a target. Blockable by <hl id=\"captain-color\">Captain</hl> or <hl id=\"ambassador-color\">Ambassador</hl>. Can block <hl id=\"captain-color\">STEAL</hl></p>\r\n            <h3>Assassin</h3>\r\n            <p><b id=\"assassin-color\">ASSASSINATE</b>: Pay 3 coins to choose a target to assassinate (target loses an influence). Blockable by <hl id=\"contessa-color\">Contessa</hl>.</p>\r\n            <h3>Duke</h3>\r\n            <p><b id=\"duke-color\">TAX</b>: Collect 3 coins from the treasury. Not blockable. Can block Foreign Aid.</p>\r\n            <h3>Ambassador</h3>\r\n            <p><b id=\"ambassador-color\">EXCHANGE</b>: Draw 2 influences into your hand and pick any 2 influences to put back. Not blockable. Can block <hl id=\"captain-color\">STEAL</hl></p>\r\n            <h3>Contessa</h3>\r\n            <p><b id=\"contessa-color\">BLOCK ASSASSINATION</b>: Can block <b id=\"assassin-color\">assassinations</b>. Not blockable.</p>\r\n            <h3>Other Actions</h3>\r\n            <p><b>INCOME</b>: Collect 1 coins from the treasury.</p>\r\n            <p><b>FOREIGN AID</b>: Collect 2 coins from the treasury. Blockable by <hl id=\"duke-color\">Duke</hl>.</p>\r\n            <p><b>COUP</b>: Pay 7 coins and choose a target to lose an influence. If a player starts their turn with 10 or more coins, they must Coup. Not Blockable.</p>\r\n        </div>\r\n    </div>\r\n    </ReactModal>\r\n        if(this.props.home) {\r\n            return(\r\n                <>\r\n                    <div className=\"HomeRules\" onClick={this.handleOpenRulesModal}>\r\n                        <p>Rules </p>  \r\n                        <svg className=\"InfoIcon\"xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 21 22\">\r\n                            <g id=\"more_info\" data-name=\"more info\" transform=\"translate(-39 -377)\">\r\n                                <g id=\"Ellipse_1\" data-name=\"Ellipse 1\" className=\"cls-1\" transform=\"translate(39 377)\">\r\n                                <circle className=\"cls-3\" cx=\"10.5\" cy=\"10.5\" r=\"10.5\"/>\r\n                                <circle className=\"cls-4\" cx=\"10.5\" cy=\"10.5\" r=\"10\"/>\r\n                                </g>\r\n                                <text id=\"i\" className=\"cls-2\" transform=\"translate(48 393)\"><tspan x=\"0\" y=\"0\">i</tspan></text>\r\n                            </g>\r\n                        </svg>\r\n                    </div>\r\n                    {modal}\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"Rules\" onClick={this.handleOpenRulesModal}>\r\n                <p>Rules </p>  \r\n                <svg className=\"InfoIcon\"xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 21 22\">\r\n                    <g id=\"more_info\" data-name=\"more info\" transform=\"translate(-39 -377)\">\r\n                        <g id=\"Ellipse_1\" data-name=\"Ellipse 1\" className=\"cls-1\" transform=\"translate(39 377)\">\r\n                        <circle className=\"cls-3\" cx=\"10.5\" cy=\"10.5\" r=\"10.5\"/>\r\n                        <circle className=\"cls-4\" cx=\"10.5\" cy=\"10.5\" r=\"10\"/>\r\n                        </g>\r\n                        <text id=\"i\" className=\"cls-2\" transform=\"translate(48 393)\"><tspan x=\"0\" y=\"0\">i</tspan></text>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n            {modal}\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ActionDecision from './ActionDecision';\r\nimport ChallengeDecision from './ChallengeDecision';\r\nimport BlockChallengeDecision from './BlockChallengeDecision';\r\nimport PlayerBoard from './PlayerBoard';\r\nimport RevealDecision from './RevealDecision';\r\nimport BlockDecision from './BlockDecision';\r\nimport ChooseInfluence from './ChooseInfluence';\r\nimport ExchangeInfluences from './ExchangeInfluences';\r\nimport './CoupStyles.css';\r\nimport EventLog from './EventLog';\r\nimport ReactModal from 'react-modal';\r\nimport CheatSheetModal from '../CheatSheetModal';\r\nimport RulesModal from '../RulesModal';\r\n\r\nexport default class Coup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             action: null,\r\n             blockChallengeRes: null,\r\n             players: [],\r\n             playerIndex: null,\r\n             currentPlayer: '',\r\n             isChooseAction: false,\r\n             revealingRes: null,\r\n             blockingAction: null,\r\n             isChoosingInfluence: false,\r\n             exchangeInfluence: null,\r\n             error: '',\r\n             winner: '',\r\n             playAgain: null,\r\n             logs: [],\r\n             isDead: false,\r\n             waiting: true,\r\n             disconnected: false\r\n        }\r\n        const bind = this;\r\n\r\n        this.playAgainButton = <>\r\n        <br></br>\r\n        <button className=\"startGameButton\" onClick={() => {\r\n            this.props.socket.emit('g-playAgain');\r\n        }}>Play Again</button>\r\n        </>\r\n\r\n        this.props.socket.on('disconnect', reason => {\r\n            this.setState({ disconnected: true });\r\n        })\r\n\r\n        this.props.socket.on('g-gameOver', (winner) => {\r\n            bind.setState({winner: `${winner} Wins!`})\r\n            bind.setState({playAgain: bind.playAgainButton})\r\n        })\r\n        this.props.socket.on('g-updatePlayers', (players) => {\r\n            bind.setState({playAgain: null})\r\n            bind.setState({winner: null})\r\n            players = players.filter(x => !x.isDead);\r\n            let playerIndex = null;\r\n            for(let i = 0; i < players.length; i++) {\r\n                console.log(players[i].name, this.props.name)\r\n                if(players[i].name === this.props.name) {\r\n                    playerIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            if(playerIndex == null) {\r\n                this.setState({ isDead: true })\r\n            }else {\r\n                this.setState({ isDead: false})\r\n            }\r\n            console.log(playerIndex)\r\n            bind.setState({playerIndex, players});\r\n            \r\n        });\r\n        this.props.socket.on('g-updateCurrentPlayer', (currentPlayer) => {\r\n            console.log('currentPlayer: ', currentPlayer)\r\n            bind.setState({ currentPlayer });\r\n        });\r\n        this.props.socket.on('g-addLog', (log) => {\r\n            let splitLog=  log.split(' ');\r\n            let coloredLog = [];\r\n            coloredLog = splitLog.map((item, index) => {\r\n                let found = null\r\n                bind.state.players.forEach(player => {\r\n                    if(item === player.name){\r\n                        found = <b style={{color: player.color}}>{player.name} </b>;\r\n                    }\r\n                })\r\n                if(found){\r\n                    return found;\r\n                }\r\n                return <>{item+' '}</>\r\n            })\r\n            bind.state.logs = [...bind.state.logs, coloredLog]\r\n            bind.setState({logs :bind.state.logs})\r\n        })\r\n        this.props.socket.on('g-chooseAction', () => {        \r\n            bind.setState({ isChooseAction: true})\r\n        });\r\n        this.props.socket.on('g-openExchange', (drawTwo) => {\r\n            let influences = [...bind.state.players[bind.state.playerIndex].influences, ...drawTwo];\r\n            bind.setState({ exchangeInfluence: influences });\r\n        })\r\n        this.props.socket.on('g-openChallenge', (action) => {\r\n            if(this.state.isDead) {\r\n                return\r\n            }\r\n            if(action.source !== bind.props.name) {\r\n               bind.setState({ action }) \r\n            } else {\r\n                bind.setState({ action: null }) \r\n            }\r\n        });\r\n        this.props.socket.on('g-openBlockChallenge', (blockChallengeRes) => {\r\n            if(this.state.isDead) {\r\n                return\r\n            }\r\n            if(blockChallengeRes.counterAction.source !== bind.props.name) {\r\n               bind.setState({ blockChallengeRes }) \r\n            } else {\r\n                bind.setState({ blockChallengeRes: null }) \r\n            }\r\n        });\r\n        this.props.socket.on('g-openBlock', (action) => {\r\n            if(this.state.isDead) {\r\n                return\r\n            }\r\n            if(action.source !== bind.props.name) {\r\n                bind.setState({ blockingAction: action })\r\n             } else {\r\n                 bind.setState({ blockingAction: null }) \r\n             }\r\n        });\r\n        this.props.socket.on('g-chooseReveal', (res) => {\r\n            console.log(res)\r\n            bind.setState({ revealingRes: res});\r\n        });\r\n        this.props.socket.on('g-chooseInfluence', () => {\r\n            bind.setState({ isChoosingInfluence: true });\r\n        });\r\n        this.props.socket.on('g-closeChallenge', () => {\r\n            bind.setState({ action: null });\r\n        });\r\n        this.props.socket.on('g-closeBlock', () => {\r\n            bind.setState({ blockingAction: null });\r\n        });\r\n        this.props.socket.on('g-closeBlockChallenge', () => {\r\n            bind.setState({ blockChallengeRes: null });\r\n        });\r\n    }\r\n\r\n    deductCoins = (amount) => {\r\n        let res = {\r\n            source: this.props.name,\r\n            amount: amount\r\n        }\r\n        this.props.socket.emit('g-deductCoins', res);\r\n    }\r\n\r\n    doneAction = () => {\r\n        this.setState({ \r\n            isChooseAction: false\r\n        })\r\n    }\r\n    doneChallengeBlockingVote = () => {\r\n        this.setState({ action: null }); //challemge\r\n        this.setState({ blockChallengeRes: null}); //challenge a block\r\n        this.setState({ blockingAction: null }); //block\r\n    }\r\n    closeOtherVotes = (voteType) => {\r\n        if(voteType === 'challenge') {\r\n            this.setState({ blockChallengeRes: null}); //challenge a block\r\n            this.setState({ blockingAction: null }); //block\r\n        }else if(voteType === 'block') {\r\n            this.setState({ action: null }); //challemge\r\n            this.setState({ blockChallengeRes: null}); //challenge a block\r\n        }else if(voteType === 'challenge-block') {\r\n            this.setState({ action: null }); //challemge\r\n            this.setState({ blockingAction: null }); //block\r\n        }\r\n    }\r\n    doneReveal = () => {\r\n        this.setState({ revealingRes: null });\r\n    }\r\n    doneChooseInfluence = () => {\r\n        this.setState({ isChoosingInfluence: false })\r\n    }\r\n    doneExchangeInfluence = () => {\r\n        this.setState({ exchangeInfluence: null })\r\n    }\r\n    pass = () => {\r\n        if(this.state.action != null) { //challengeDecision\r\n            let res = {\r\n                isChallenging: false,\r\n                action: this.state.action\r\n            }\r\n            console.log(res)\r\n            this.props.socket.emit('g-challengeDecision', res);\r\n        }else if(this.state.blockChallengeRes != null) { //BlockChallengeDecision\r\n            let res = {\r\n                isChallenging: false\r\n            }\r\n            console.log(res)\r\n            this.props.socket.emit('g-blockChallengeDecision', res);\r\n        }else if(this.state.blockingAction !== null) { //BlockDecision\r\n            const res = {\r\n                action: this.state.blockingAction,\r\n                isBlocking: false\r\n            }\r\n            console.log(res)\r\n            this.props.socket.emit('g-blockDecision', res)\r\n        }\r\n        this.doneChallengeBlockingVote();\r\n    }\r\n\r\n    influenceColorMap = {\r\n        duke: '#D55DC7',\r\n        captain: '#80C6E5',\r\n        assassin: '#2B2B2B',\r\n        contessa: '#E35646',\r\n        ambassador: '#B4CA1F'\r\n    }\r\n    \r\n    render() {\r\n        let actionDecision = null\r\n        let currentPlayer = null\r\n        let revealDecision = null\r\n        let challengeDecision = null\r\n        let blockChallengeDecision = null\r\n        let chooseInfluenceDecision = null\r\n        let blockDecision = null\r\n        let influences = null\r\n        let pass = null\r\n        let coins = null\r\n        let exchangeInfluences = null\r\n        let playAgain = null\r\n        let isWaiting = true\r\n        let waiting = null\r\n        if(this.state.isChooseAction && this.state.playerIndex != null) {\r\n            isWaiting = false;\r\n            actionDecision = <ActionDecision doneAction={this.doneAction} deductCoins={this.deductCoins} name={this.props.name} socket={this.props.socket} money={this.state.players[this.state.playerIndex].money} players={this.state.players}></ActionDecision>\r\n        }\r\n        if(this.state.currentPlayer) {\r\n            currentPlayer = <p>It is <b>{this.state.currentPlayer}</b>'s turn</p>\r\n        }\r\n        if(this.state.revealingRes) {\r\n            isWaiting = false;\r\n            revealDecision = <RevealDecision doneReveal={this.doneReveal} name ={this.props.name} socket={this.props.socket} res={this.state.revealingRes} influences={this.state.players.filter(x => x.name === this.props.name)[0].influences}></RevealDecision>\r\n        }\r\n        if(this.state.isChoosingInfluence) {\r\n            isWaiting = false;\r\n            chooseInfluenceDecision = <ChooseInfluence doneChooseInfluence={this.doneChooseInfluence} name ={this.props.name} socket={this.props.socket} influences={this.state.players.filter(x => x.name === this.props.name)[0].influences}></ChooseInfluence>\r\n        }\r\n        if(this.state.action != null || this.state.blockChallengeRes != null || this.state.blockingAction !== null){\r\n            pass = <button onClick={() => this.pass()}>Pass</button>\r\n        }\r\n        if(this.state.action != null) {\r\n            isWaiting = false;\r\n            challengeDecision = <ChallengeDecision closeOtherVotes={this.closeOtherVotes} doneChallengeVote={this.doneChallengeBlockingVote} name={this.props.name} action={this.state.action} socket={this.props.socket} ></ChallengeDecision>\r\n        }\r\n        if(this.state.exchangeInfluence) {\r\n            isWaiting = false;\r\n            exchangeInfluences = <ExchangeInfluences doneExchangeInfluence={this.doneExchangeInfluence} name={this.props.name} influences={this.state.exchangeInfluence} socket={this.props.socket}></ExchangeInfluences>\r\n        }\r\n        if(this.state.blockChallengeRes != null) {\r\n            isWaiting = false;\r\n            blockChallengeDecision = <BlockChallengeDecision closeOtherVotes={this.closeOtherVotes} doneBlockChallengeVote={this.doneChallengeBlockingVote} name={this.props.name} prevAction={this.state.blockChallengeRes.prevAction} counterAction={this.state.blockChallengeRes.counterAction} socket={this.props.socket} ></BlockChallengeDecision>\r\n        }\r\n        if(this.state.blockingAction !== null) {\r\n            isWaiting = false;\r\n            blockDecision = <BlockDecision closeOtherVotes={this.closeOtherVotes} doneBlockVote={this.doneChallengeBlockingVote} name={this.props.name} action={this.state.blockingAction} socket={this.props.socket} ></BlockDecision>\r\n        }\r\n        if(this.state.playerIndex != null && !this.state.isDead) {\r\n            influences = <>\r\n            <p>Your Influences</p>\r\n                {this.state.players[this.state.playerIndex].influences.map((influence, index) => {\r\n                    return  <div key={index} className=\"InfluenceUnitContainer\">\r\n                                <span className=\"circle\" style={{backgroundColor: `${this.influenceColorMap[influence]}`}}></span>\r\n                                <br></br>\r\n                                <h3>{influence}</h3>\r\n                            </div>\r\n                    })\r\n                }\r\n            </>\r\n            \r\n            coins = <p>Coins: {this.state.players[this.state.playerIndex].money}</p>\r\n        }\r\n        if(isWaiting && !this.state.isDead) {\r\n            waiting = <p>Waiting for other players...</p>\r\n        }\r\n        if(this.state.disconnected) {\r\n            return (\r\n                <div className=\"GameContainer\">\r\n                    <div className=\"GameHeader\">\r\n                        <div className=\"PlayerInfo\">\r\n                            <p>You are: {this.props.name}</p>\r\n                            {coins}\r\n                        </div>\r\n                        <RulesModal/>\r\n                        <CheatSheetModal/>\r\n                    </div>\r\n                    <p>You have been disconnected :c</p>\r\n                    <p>Please recreate the game.</p>\r\n                    <p>Sorry for the inconvenience (シ_ _)シ</p>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"GameContainer\">\r\n                <div className=\"GameHeader\">\r\n                    <div className=\"PlayerInfo\">\r\n                        <p>You are: {this.props.name}</p>\r\n                        {coins}\r\n                    </div>\r\n                    <div className=\"CurrentPlayer\">\r\n                        {currentPlayer}\r\n                    </div>\r\n                    <RulesModal/>\r\n                    <CheatSheetModal/>\r\n                    <EventLog logs={this.state.logs}></EventLog>\r\n                </div>\r\n                <div className=\"InfluenceSection\">\r\n                    {influences}\r\n                </div>\r\n                <PlayerBoard players={this.state.players}></PlayerBoard>\r\n                <div className=\"DecisionsSection\">\r\n                    {waiting}\r\n                    {revealDecision}\r\n                    {chooseInfluenceDecision}\r\n                    {actionDecision}\r\n                    {exchangeInfluences}\r\n                    {challengeDecision}\r\n                    {blockChallengeDecision}\r\n                    {blockDecision}\r\n                    {pass}\r\n                    {playAgain}\r\n                </div>\r\n                <b>{this.state.winner}</b>\r\n                {this.state.playAgain}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport io from \"socket.io-client\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport Coup from './game/Coup';\r\n\r\nconst axios = require('axios');\r\nconst baseUrl = \"https://rocky-stream-49978.herokuapp.com\"\r\n\r\nexport default class CreateGame extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            name: '',\r\n            roomCode: '',\r\n            copied: false,\r\n            isInRoom: false,\r\n            isLoading: false,\r\n            players: [],\r\n            isError: false,\r\n            isGameStarted: false,\r\n            errorMsg: '',\r\n            canStart: false,\r\n            socket: null,\r\n\r\n        }\r\n    }\r\n\r\n    onNameChange = (name) => {\r\n        this.setState({ name });\r\n    }\r\n\r\n    joinParty = () => {\r\n        const bind = this\r\n        const socket = io(`${baseUrl}/${this.state.roomCode}`);\r\n        this.setState({ socket });\r\n        console.log(\"socket created\")\r\n        socket.emit('setName', this.state.name);\r\n        \r\n        socket.on(\"joinSuccess\", function() {\r\n            console.log(\"join successful\")\r\n            bind.setState({ \r\n                isLoading: false,\r\n                isInRoom: true\r\n            });\r\n        })\r\n\r\n        socket.on(\"joinFailed\", function(err) {\r\n            console.log(\"join failed, cause: \" + err);\r\n            bind.setState({ isLoading: false });\r\n        })\r\n\r\n        socket.on(\"leader\", function() {\r\n            console.log(\"You are the leader\")\r\n        })\r\n\r\n        socket.on('partyUpdate', (players) => {\r\n            console.log(players)\r\n            this.setState({ players })\r\n            if(players.length >= 2 && players.map(x => x.isReady).filter(x => x === true).length === players.length) { //TODO CHANGE 2 BACK TO 3\r\n                this.setState({ canStart: true })\r\n            } else {\r\n                this.setState({ canStart: false })\r\n            }\r\n        })\r\n\r\n        socket.on('disconnected', function() {\r\n            console.log(\"You've lost connection with the server\")\r\n        });\r\n    }\r\n\r\n    createParty = () => {\r\n        if(this.state.name === '') {\r\n            //TODO  handle error\r\n            console.log('Please enter a name');\r\n            this.setState({ errorMsg: 'Please enter a name' });\r\n            this.setState({ isError: true });\r\n            return\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        const bind = this;\r\n        axios.get(`${baseUrl}/createNamespace`)\r\n            .then(function (res) {\r\n                console.log(res);\r\n                bind.setState({ roomCode: res.data.namespace, errorMsg: '' });\r\n                bind.joinParty();\r\n            })\r\n            .catch(function (err) {\r\n                //TODO  handle error\r\n                console.log(\"error in creating namespace\", err);\r\n                bind.setState({ isLoading: false });\r\n                bind.setState({ errorMsg: 'Error creating room, server is unreachable' });\r\n                bind.setState({ isError: true });\r\n            })\r\n    }\r\n\r\n    startGame = () => {\r\n        this.state.socket.emit('startGameSignal', this.state.players)\r\n\r\n        this.state.socket.on('startGame', () => {\r\n            this.setState({ isGameStarted: true});\r\n        })\r\n    }\r\n\r\n    copyCode = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = this.state.roomCode;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.setState({copied: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isGameStarted) {\r\n            return (<Coup name={this.state.name} socket={this.state.socket}></Coup>)\r\n        }\r\n        let error = null;\r\n        let roomCode = null;\r\n        let startGame = null;\r\n        let createButton = null;\r\n        let youCanSort = null;\r\n        if(!this.state.isInRoom) {\r\n            createButton = <>\r\n            <button className=\"createButton\" onClick={this.createParty} disabled={this.state.isLoading}>{this.state.isLoading ? 'Creating...': 'Create'}</button>\r\n            <br></br>\r\n            </>\r\n        }\r\n        if(this.state.isError) {\r\n            error = <b>{this.state.errorMsg}</b>\r\n        }\r\n        if(this.state.roomCode !== '' && !this.state.isLoading) {\r\n            youCanSort = <p>You can drag to re-arrange the players in a specific turn order!</p>\r\n            roomCode = <div>\r\n                    <p>ROOM CODE: <br></br> <br></br><b className=\"RoomCode\" onClick={this.copyCode}>{this.state.roomCode} <span className=\"iconify\" data-icon=\"typcn-clipboard\" data-inline=\"true\"></span></b></p>\r\n                    {this.state.copied ? <p>Copied to clipboard</p> : null}\r\n                </div>\r\n        }\r\n        if(this.state.canStart) {\r\n            startGame = <button className=\"startGameButton\" onClick={this.startGame}>Start Game</button>\r\n        }\r\n        return (\r\n            <div className=\"createGameContainer\">\r\n                <p>Please enter your name</p>\r\n                <input\r\n                    type=\"text\" value={this.state.name} disabled={this.state.isLoading || this.state.isInRoom}\r\n                    onChange={e => {\r\n                        if(e.target.value.length <= 10){\r\n                            this.setState({\r\n                                errorMsg: '',\r\n                                isError: false\r\n                            })\r\n                            this.onNameChange(e.target.value);\r\n                        } else {\r\n                            this.setState({\r\n                                errorMsg: 'Name must be less than 11 characters',\r\n                                isError: true\r\n                            })\r\n                        }\r\n                        \r\n                    }}\r\n                />\r\n                <br></br>\r\n                {createButton}\r\n                {error}\r\n                <br></br>\r\n                {roomCode}\r\n                {youCanSort}\r\n                <div className=\"readyUnitContainer\">\r\n                    <ReactSortable list={this.state.players} setList={newState => this.setState({ players: newState })}>\r\n                        {this.state.players.map((item,index) => {\r\n                            let ready = null\r\n                            let readyUnitColor = '#E46258'\r\n                            if(item.isReady) {\r\n                                ready = <b>Ready!</b>\r\n                                readyUnitColor = '#73C373'\r\n                            } else {\r\n                                ready = <b>Not Ready</b>\r\n                            }\r\n                            return (\r\n                                    <div className=\"readyUnit\" style={{backgroundColor: readyUnitColor}} key={index}>\r\n                                        <p >{index+1}. {item.name} {ready}</p>\r\n                                    </div>\r\n                            )\r\n                            })\r\n                        }\r\n                    </ReactSortable>\r\n                </div>\r\n                \r\n                {startGame}\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport io from \"socket.io-client\";\r\nimport Coup from './game/Coup';\r\n\r\nconst axios = require('axios');\r\nconst baseUrl = \"https://rocky-stream-49978.herokuapp.com\" \r\n\r\nexport default class JoinGame extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            name: '',\r\n            roomCode: '',\r\n            players: [],\r\n            isInRoom: false,\r\n            isReady: false,\r\n            isLoading: false,\r\n            isError: false,\r\n            isGameStarted: false,\r\n            errorMsg: '',\r\n            socket: null\r\n        }\r\n    }\r\n\r\n    onNameChange = (name) => {\r\n        this.setState({ name });\r\n    }\r\n\r\n    onCodeChange = (roomCode) => {\r\n        this.setState({ roomCode });\r\n    }\r\n\r\n    joinParty = () => {\r\n        const bind = this\r\n        const socket = io(`${baseUrl}/${this.state.roomCode}`);\r\n        this.setState({ socket });\r\n        console.log(\"socket created\")\r\n        socket.emit('setName', this.state.name);\r\n        \r\n        socket.on(\"joinSuccess\", function() {\r\n            console.log(\"join successful\")\r\n            // bind.setState({ isLoading: false });\r\n            bind.setState({ isInRoom: true })\r\n        })\r\n\r\n        socket.on(\"joinFailed\", function(err) {\r\n            console.log(\"join failed, cause: \" + err);\r\n            bind.setState({ \r\n                errorMsg: err,\r\n                isError: true,\r\n                isLoading: false\r\n            });\r\n            socket.disconnect();\r\n        })\r\n\r\n        socket.on('startGame', () => {\r\n            this.setState({ isGameStarted: true});\r\n        })\r\n\r\n        socket.on('partyUpdate', (players) => {\r\n            console.log(players)\r\n            this.setState({ players })\r\n            if(players.length >= 3 && players.map(x => x.isReady).filter(x => x === true).length === players.length) { //TODO CHANGE 2 BACK TO 3\r\n                this.setState({ canStart: true })\r\n            } else {\r\n                this.setState({ canStart: false })\r\n            }\r\n        })\r\n\r\n\r\n        socket.on('disconnected', function() {\r\n            console.log(\"You've lost connection with the server\")\r\n        });\r\n    }\r\n\r\n    attemptJoinParty = () => {\r\n\r\n        if(this.state.name === '') {\r\n            //TODO  handle error\r\n            console.log('Please enter a name');\r\n            this.setState({ \r\n                errorMsg: 'Please enter a name',\r\n                isError: true \r\n            });\r\n            return\r\n        }\r\n        if(this.state.roomCode === '') {\r\n            //TODO  handle error\r\n            console.log('Please enter a room code');\r\n            this.setState({ \r\n                errorMsg: 'Please enter a room code',\r\n                isError: true\r\n            });\r\n            return\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        const bind = this\r\n        axios.get(`${baseUrl}/exists/${this.state.roomCode}`)\r\n            .then(function (res) {\r\n                console.log(res)\r\n                if(res.data.exists) {\r\n                    //join \r\n                    console.log(\"joining\")\r\n                    bind.setState({errorMsg: ''})\r\n                    bind.joinParty();\r\n                } else {\r\n                    //TODO  handle error\r\n                    console.log('Invalid Party Code')\r\n                    bind.setState({ \r\n                        isLoading: false,\r\n                        errorMsg: 'Invalid Party Code',\r\n                        isError: true\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (err) {\r\n                //TODO  handle error\r\n                console.log(\"error in getting exists\", err);\r\n                bind.setState({ \r\n                    isLoading: false,\r\n                    errorMsg: 'Server error',\r\n                    isError: true\r\n                });\r\n            })\r\n    }\r\n    \r\n    reportReady = () => {\r\n        this.state.socket.emit('setReady', true);\r\n        this.state.socket.on('readyConfirm', () => {\r\n            this.setState({ isReady: true })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isGameStarted) {\r\n            return (<Coup name={this.state.name} socket={this.state.socket}></Coup>);\r\n        }\r\n        let error = null;\r\n        let joinReady = null;\r\n        let ready = null;\r\n        if(this.state.isError) {\r\n            error = <b>{this.state.errorMsg}</b>\r\n        }\r\n        if(this.state.isInRoom) {\r\n            joinReady = <button className=\"joinButton\" onClick={this.reportReady} disabled={this.state.isReady}>Ready</button>\r\n        } else {\r\n            joinReady = <button className=\"joinButton\" onClick={this.attemptJoinParty} disabled={this.state.isLoading}>{this.state.isLoading ? 'Joining...': 'Join'}</button>\r\n        }\r\n        if(this.state.isReady) {\r\n            ready = <b style={{ color: '#5FC15F' }}>You are ready!</b>\r\n            joinReady = null\r\n        }\r\n\r\n        return (\r\n            <div className=\"joinGameContainer\">\r\n                <p>Your Name</p>\r\n                <input\r\n                    type=\"text\" value={this.state.name} disabled={this.state.isLoading}\r\n                    onChange={e => {\r\n                        if(e.target.value.length <= 8){\r\n                            this.setState({\r\n                                errorMsg: '',\r\n                                isError: false\r\n                            })\r\n                            this.onNameChange(e.target.value);\r\n                        } else {\r\n                            this.setState({\r\n                                errorMsg: 'Name must be less than 9 characters',\r\n                                isError: true\r\n                            })\r\n                        }\r\n                    }}\r\n                />\r\n                <p>Room Code</p>\r\n                <input\r\n                    type=\"text\" value={this.state.roomCode} disabled={this.state.isLoading}\r\n                    onChange={e => this.onCodeChange(e.target.value)}\r\n                />\r\n                <br></br>\r\n                {joinReady}\r\n                <br></br>\r\n                {ready}\r\n                <br></br>\r\n                {error}\r\n                <div className=\"readyUnitContainer\">\r\n                        {this.state.players.map((item,index) => {\r\n                            let ready = null\r\n                            let readyUnitColor = '#E46258'\r\n                            if(item.isReady) {\r\n                                ready = <b>Ready!</b>\r\n                                readyUnitColor = '#73C373'\r\n                            } else {\r\n                                ready = <b>Not Ready</b>\r\n                            }\r\n                            return (\r\n                                    <div className=\"readyUnit\" style={{backgroundColor: readyUnitColor}} key={index}>\r\n                                        <p >{index+1}. {item.name} {ready}</p>\r\n                                    </div>\r\n                            )\r\n                            })\r\n                        }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport chicken from \"../assets/Chicken.svg\"\r\nimport RulesModal from './RulesModal';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"homeContainer\">\r\n                <h1>Welcome to Coup</h1>\r\n                <p>A game of deduction and deception</p>\r\n                <img src={chicken} alt=\"chicken-leg\"/>\r\n                <div className=\"input-group-btn\">\r\n                    <Link className=\"home\" to=\"/create\" >Create Game</Link>\r\n                </div>\r\n                <div className=\"input-group-btn\">\r\n                    <Link className=\"home\" to=\"/join\" >Join Game</Link>\r\n                </div>\r\n                <div>\r\n                    <div className=\"homeModalContainer\">\r\n                    <RulesModal home={true}/> \r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                \r\n            </div>\r\n            <p className=\"footer\">Made by <a className=\"website-link\" href=\"https://github.com/cheneth\" target=\"_blank\" rel=\"noopener noreferrer\">Ethan Chen</a></p>\r\n            <p className=\"version-number\">Beta v0.9</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport CreateGame from './components/CreateGame';\r\nimport './App.css';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport JoinGame from './components/JoinGame';\r\nimport Home from './components/Home';\r\n\r\nconst trackingId = process.env.REACT_APP_GOOGLE_TRACKING_ID || '';\r\nReactGA.initialize(trackingId);\r\nReactGA.pageview('/homepage');\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/create\">\r\n              <CreateGame></CreateGame>\r\n            </Route>\r\n            <Route path=\"/join\">\r\n              <JoinGame></JoinGame>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home></Home>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/CheatSheet.ebc97bb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chicken.28e8baf1.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}